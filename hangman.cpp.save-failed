#include <iostream>
#include <cstdlib>
#include <ctime>
#include <fstream>
#include <vector>
#include <algorithm>
#include <thread>
#include <chrono>

#include "draw.h"
#include "utility.h"
#include "prepare.h"

using namespace std;

string readAGuess(int counttrue)
{
    string guess;
    if(counttrue == 0) {
        cout<<"\t\t __\n";
        cout<<"\t\t \\ \\________________\n";
        cout<<"\t\t |     Incorect!    \\\n";
        cout<<"\t\t |________-_________/\n";
    }
    else if(counttrue >= 1 ){
        cout<<"\t\t __\n";
        cout<<"\t\t \\ \\_______________________\n";
        cout<<"\t\t |          corect!        \\\n";
        //cout<<"\t\t |  You have 2 letter(s)   /\n";
        cout<<"\t\t |  You have "<<counttrue<<" letter(s)   /\n";
    }
    cout<<endl;
    cout << "Please enter your next guess: " <<endl;
    //cin >> guess;
    guess = Clock();
    return guess;
}

void MakeSuggest(string& guessedWord, const string& word)
{
    int n = guessedWord.length();
    for (int i = 0; i < n; i++) {
        if (guessedWord[i] == '-') {
            guessedWord[i] = word[i];
            break;
        }
    }
}

void update(string& guessedWord, const string& word, int& counttrue, char guess)
{
    int n = guessedWord.length();
    for (int i = 0; i < n; i++) {
        if (word[i] == guess)
            {
                guessedWord[i] = guess;
                ++counttrue;
            }
    }
}

int main(int argc, char* argv[])
{
    //srand(time(0));
    //string fileName = argc > 1 ? argv[1] : "ogden_picturable_200.txt";
    while (true) {

        int modeplay = SelectMode();

    if(modeplay == 1)
    {
        Start1();
        int level = ConfirmLevel();
        int tag = ConfirmTag();

        srand(time(0));
        string fileName;
        switch(tag)
        {
            case 1 : fileName = argc > 1 ? argv[1] : "animals.txt"; break;
            case 2 : fileName = argc > 1 ? argv[1] : "actions.txt"; break;
            case 3 : fileName = argc > 1 ? argv[1] : "things.txt"; break;
            case 4 : fileName = argc > 1 ? argv[1] : "mystic.txt"; break;
        }

        string word = chooseWord(fileName,level);
        if (word.empty()) {
            cout << "No word available in " << fileName << endl;
            return 0;
        }

        string guessedWord = string(word.length(), '-');
        int badGuessCount = 0;
        int Suggestion = (word.length()-1)/2;
        const int MAX_BAD_GUESS = 7;
        int counttrue = -1;
        string badGuess;

        do {
            renderGame(guessedWord, badGuessCount, Suggestion, tag, level, badGuess);
            string order = readAGuess(counttrue);
            counttrue = 0;

            if(order == "suggest" && Suggestion>0){
                MakeSuggest(guessedWord, word);
                --Suggestion;
                counttrue = 1;
            }
            else{
                    char guess = order[0];
                    if (contains(word, guess)) {
                        update(guessedWord, word, counttrue, guess);
                    } else {
                        badGuessCount++;
                        badGuess += guess;
                    }
            }
        } while (badGuessCount < MAX_BAD_GUESS && guessedWord != word);

        printGameOverInfo(guessedWord, word, badGuessCount, Suggestion, tag, level);
    }

    else
    {
        string ans ;
        int round = 10;
        string fileName = argc > 1 ? argv[1] : "ogden_picturable_200.txt";
        while(ans != 'Y' && round >0)
        {
            Start2();
            srand(time(0));
            string gword = randword(fileName);
            cout<<"I guess your word is: " << gword <<endl;
            cout<<"Yes(Y) or No(N)?: ";
            cin>>ans;
            --round;
        }
        cout<<endl;
        if((ans == "Y") || (ans == "y")) cout<<"Yay, I win!";
        else cout<<"Oh, I losse :(";
        cout<<endl;
    }


        cout << "Do you want more (Y/N) ?";
        string answer;
        cin.ignore(1);
        getline(cin, answer);
        if (answer != "Y" && answer != "y")
            break;
    }

    return 0;
}
